<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>testQuery</name>
    <description>Clean Transformation</description>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#x2f;</directory>
    <parameters>
        <parameter>
            <name>&#x23;cpk.cache.isEnabled</name>
            <default_value>false</default_value>
            <description>Enables&#x2f;disables caching of the results. Remove &#x27;&#x23;&#x27; to use variable.&#xa;</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.cache.timeToLiveSeconds</name>
            <default_value>3600</default_value>
            <description>For how many seconds a result will be cached. Setting this value to 0 means the result will be cached &#x22;forever&#x22;. Remove &#x27;&#x23;&#x27; to use variable.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.executeAtStart</name>
            <default_value/>
            <description>Whether the transformation is to be executed when the plugin is initialized. Remove &#x27;&#x23;&#x27; to use variable.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.plugin.dir</name>
            <default_value>&#x24;&#x7b;Internal.Transformation.Filename.Directory&#x7d;&#x2f;..&#x2f;..</default_value>
            <description>The plugin folder. This value is automatically set at runtime if &#x27;&#x23;&#x27; is removed from variable name.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.plugin.id</name>
            <default_value/>
            <description>The id of the plugin. This value is automatically set at runtime if  &#x27;&#x23;&#x27; is removed from variable name.&#xa;</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.response.attachmentName</name>
            <default_value/>
            <description>The attachment name used when downloading a file from a result.  Remove &#x27;&#x23;&#x27; to use variable.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.response.download</name>
            <default_value>false</default_value>
            <description>Whether to &#x28;or not&#x29; mark the http reponse body as an attachment. Remove &#x27;&#x23;&#x27; to use variable.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.response.kettleOutput</name>
            <default_value>Infered</default_value>
            <description>The output format to be used by default. Possible values&#x3a; Infered, Json, SingleCell, ResultFiles, ResultOnly. Remove &#x27;&#x23;&#x27; to use variable.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.response.mimeType</name>
            <default_value/>
            <description>The mimeType of the http response. If this value is not set, the plugin will try to determine it from the file extension. Remove &#x27;&#x23;&#x27; to use variable.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.result.stepName</name>
            <default_value>OUTPUT</default_value>
            <description>The default output step where the rows will be fetched for the result. Remove &#x27;&#x23;&#x27; to use variable.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.session.&#x5b;sessionVarName&#x5d;</name>
            <default_value/>
            <description>The value of session variable named &#x5b;sessionVarName&#x5d;. This value is automatically injected here at runtime if &#x27;&#x23;&#x27; is removed from variable name.&#xa;</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.session.roles</name>
            <default_value/>
            <description>The roles of the username executing this transformation. This value is automatically set at runtime if &#x27;&#x23;&#x27; is removed from variable name.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.session.username</name>
            <default_value/>
            <description>The username that is executing this transformation. This value is automatically set at runtime if &#x27;&#x23;&#x27; is removed from variable name.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.solution.system.dir</name>
            <default_value>&#x24;&#x7b;cpk.plugin.dir&#x7d;&#x2f;..</default_value>
            <description>The pentaho-solutions folder. This value is automatically set at runtime if &#x27;&#x23;&#x27; is removed from variable name.</description>
        </parameter>
        <parameter>
            <name>&#x23;cpk.webapp.dir</name>
            <default_value>&#x24;&#x7b;cpk.solution.system.dir&#x7d;&#x2f;..&#x2f;..&#x2f;tomcat&#x2f;webapps&#x2f;pentaho</default_value>
            <description>The webapp folder. This value is automatically set at runtime if &#x27;&#x23;&#x27; is removed from variable name.</description>
        </parameter>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field><field><id>EXECUTING_SERVER</id><enabled>N</enabled><name>EXECUTING_SERVER</name></field><field><id>EXECUTING_USER</id><enabled>N</enabled><name>EXECUTING_USER</name></field><field><id>CLIENT</id><enabled>N</enabled><name>CLIENT</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
<metrics-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>METRICS_DATE</id><enabled>Y</enabled><name>METRICS_DATE</name></field><field><id>METRICS_CODE</id><enabled>Y</enabled><name>METRICS_CODE</name></field><field><id>METRICS_DESCRIPTION</id><enabled>Y</enabled><name>METRICS_DESCRIPTION</name></field><field><id>METRICS_SUBJECT</id><enabled>Y</enabled><name>METRICS_SUBJECT</name></field><field><id>METRICS_TYPE</id><enabled>Y</enabled><name>METRICS_TYPE</name></field><field><id>METRICS_VALUE</id><enabled>Y</enabled><name>METRICS_VALUE</name></field></metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user>-</created_user>
  <created_date>2013&#x2f;07&#x2f;04 18&#x3a;48&#x3a;57.073</created_date>
  <modified_user>-</modified_user>
  <modified_date>2013&#x2f;07&#x2f;04 18&#x3a;48&#x3a;57.073</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA&#x3d;</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
  <hop> <from>Generate Rows</from><to>User Defined Java Class</to><enabled>Y</enabled> </hop>
  <hop> <from>User Defined Java Class</from><to>OUTPUT</to><enabled>Y</enabled> </hop>
  </order>
  <step>
    <name>OUTPUT</name>
    <type>Dummy</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>830</xloc>
      <yloc>154</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Generate Rows</name>
    <type>RowGenerator</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>
      <field>
        <name>server_path</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>http&#x3a;&#x2f;&#x2f;localhost&#x3a;8080&#x2f;pentaho</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>query_path</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>content&#x2f;ws-run&#x2f;metadataService&#x2f;listBusinessModels</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <limit>1</limit>
    <never_ending>N</never_ending>
    <interval_in_ms>5000</interval_in_ms>
    <row_time_field>now</row_time_field>
    <last_time_field>FiveSecondsAgo</last_time_field>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>157</xloc>
      <yloc>226</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>User Defined Java Class</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Processor</class_name>

        <class_source><![CDATA[/*
*  Pentaho HTTP Client
*/


import org.apache.commons.httpclient.*;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.*;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;


import javax.servlet.RequestDispatcher;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRequestEvent;
import javax.servlet.DispatcherType;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Map;

import org.pentaho.di.baserver.utils.web.*;

 

String query_path = null;
String server_path = null;
private FieldHelper outputField = null;
private FieldHelper inputField = null;
Connection connection = null;
Channel channel = null;
String encoding = "UTF-8";
String exchangeName = null;
String routingKey = null;
String queueName = null;
boolean autoAck = false; //false if the server should expect explicit acknowledgements
boolean durable = true;  //=survive server restart
int limite = 0;
int linea = 0;
 
 
public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{

  // First, get a row from the default input hop
  Object[] r = getRow();
  Object[] outputRow = createOutputRow(r, data.outputRowMeta.size());
 
  // If the row object is null, we are done processing.
  if (r == null) {
    setOutputDone();
    return false;
  }
  
  if (first) {
    outputField = get(Fields.Out, getParameter("OUTPUT_FIELD"));
	inputField = get(Fields.In, getParameter("QUERY_PATH"));
	query_path = inputField.getString(r);
	inputField = get(Fields.In, getParameter("SERVER_PATH"));
	server_path = inputField.getString(r);
    first = false;
	
	logBasic( "First..... server_path: " +  server_path + "  query_path "  +  query_path   );
  }
 
 
	Response response = new Response();

    // get servlet context and request dispatcher
    ServletContext servletContext = null;
    RequestDispatcher requestDispatcher = null;
    try {
      Object context = getContext();
      if ( context instanceof ServletContext ) {
        servletContext = (ServletContext) context;
        requestDispatcher = servletContext.getRequestDispatcher( query_path );
      }
    } catch ( NoClassDefFoundError ex ) {
      logger.error( "Failed to get application servlet context", ex );
      return response;
    }

    if ( requestDispatcher != null ) {
      // create servlet request
      URL fullyQualifiedServerURL;
      try {
        fullyQualifiedServerURL = getUrl();
      } catch ( MalformedURLException e ) {
        logger.error( "FullyQualifiedServerURL is incorrect" );
        return response;
      }

      final InternalHttpServletRequest servletRequest = new InternalHttpServletRequest( "GET",
          fullyQualifiedServerURL, "/", query_path );
      servletRequest.setAttribute( "org.apache.catalina.core.DISPATCHER_TYPE", DispatcherType.FORWARD ); //FORWARD = 2

	  
	  /*   De Momento NO
      
	  
	  
	  try {
        insertParameters( httpMethod, queryParameters, servletRequest );
      } catch ( UnsupportedEncodingException e ) {
        logger.error( "Can't encode parameters" );
        return response;
      }

	  */
	  
	  
      ServletRequestEvent servletRequestEvent = new ServletRequestEvent( servletContext, servletRequest );
      RequestContextListener requestContextListener = new RequestContextListener();
      requestContextListener.requestInitialized( servletRequestEvent );

      // create servlet response
      ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
      final InternalHttpServletResponse servletResponse = new InternalHttpServletResponse( outputStream );

      try {
        // used for calculating the response time
        long startTime = System.currentTimeMillis();

        requestDispatcher.forward( servletRequest, servletResponse );

        // get response time
        long responseTime = System.currentTimeMillis() - startTime;

        response.setStatusCode( servletResponse.getStatus() );
        response.setResult( servletResponse.getContentAsString() );
        response.setResponseTime( responseTime );
		
		
	  String messageBody =  response.getResult().toString();
      outputField.setValue(outputRow, messageBody);
      putRow(data.outputRowMeta, outputRow);
      return true;
		
		

		
		
      } catch ( ServletException ex ) {
        logger.error( "Failed ", ex );
        return response;
      } catch ( IOException ex ) {
        logger.error( "Failed ", ex );
        return response;
      } finally {
        requestContextListener.requestDestroyed( servletRequestEvent );
      }

    }


 
 
 
 

 
    if (response == null) {
      // No message retrieved => stop transformation
      setOutputDone();
      return false;
	}
  
  
  
}
 
 
public boolean init(StepMetaInterface stepMetaInterface, StepDataInterface stepDataInterface)
{
      return true;
}
 
public void dispose(StepMetaInterface smi, StepDataInterface sdi)
{
  
  parent.disposeImpl(smi, sdi);
}



  protected URL getUrl() throws MalformedURLException {
    return new URL( getFullyQualifiedServerURL() );
  }

  protected String getFullyQualifiedServerURL() {
    return PentahoSystem.getApplicationContext().getFullyQualifiedServerURL();
  }

  protected Object getContext() {
    return PentahoSystem.getApplicationContext().getContext();
  }
]]></class_source>
        </definition>
    </definitions>
    <fields>
        <field>
        <field_name>salida</field_name>

        <field_type>String</field_type>

        <field_length>-1</field_length>

        <field_precision>-1</field_precision>

        </field>
    </fields><clear_result_fields>N</clear_result_fields>
<info_steps></info_steps><target_steps></target_steps><usage_parameters><usage_parameter><parameter_tag>SERVER_PATH</parameter_tag>
<parameter_value>server_path</parameter_value>
<parameter_description/>
</usage_parameter><usage_parameter><parameter_tag>QUERY_PATH</parameter_tag>
<parameter_value>query_path</parameter_value>
<parameter_description/>
</usage_parameter><usage_parameter><parameter_tag>OUTPUT_FIELD</parameter_tag>
<parameter_value>salida</parameter_value>
<parameter_description/>
</usage_parameter></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>480</xloc>
      <yloc>233</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
<attributes><group><name>DataService</name>
</group></attributes>

</transformation>
